<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="club.banyuan.blog.dao.BlogDao">

    <resultMap id="BlogDetailByBlogId" type="com.banyuan.springdemo.bean.Blog" autoMapping="true">
        <id property="id" column="id"></id>
        <association property="author" javaType="com.banyuan.springdemo.bean.User" autoMapping="true" columnPrefix="author_">
            <id property="id" column="id"></id>

        </association>
        <collection property="comments" ofType="com.banyuan.springdemo.bean.Comment" autoMapping="true" columnPrefix="comment_" >
            <id property="id" column="id"></id>
            <id property="createdTime" column="created_time"></id>
            <association property="commenter" javaType="com.banyuan.springdemo.bean.User" autoMapping="true" columnPrefix="commenter_">
                <id property="id" column="id"></id>
            </association>
        </collection>
    </resultMap>


    <resultMap id="blogMap" type="club.banyuan.blog.bean.Blog" autoMapping="true">
        <id property="id" column="id"></id>
        <association property="author" column="user_id" resultMap="userMap" javaType="club.banyuan.blog.bean.Blog">
            <id property="id" column="user_id"></id>
        </association>
    </resultMap>

    <resultMap id="userMap" type="club.banyuan.blog.bean.User" autoMapping="true">
        <id property="id" column="id"></id>
    </resultMap>

    <select id="selectBlogsDetailByUsername" resultMap="blogDetailMap">
        SELECT blog.id, blog.title, blog.content, blog.created_time, blog.user_id ,
        user.name, user.email , user.password,
        comment.content AS comment_content,
        comment.id AS comment_id,
        comment.created_time AS comment_created_time,
        comment.blog_id AS comment_blog_id,
        comment.user_id AS comment_user_id
        FROM (blog Left JOIN user ON blog.user_id = user.id) Left JOIN comment
        ON comment.blog_id = blog.id WHERE user.name = #{username}
    </select>

    <select id="selectBlogById" resultType="club.banyuan.blog.bean.Blog">
        SELECT * FROM blog WHERE `id` = #{id}
    </select>

    <select id="selectBlogsByUsername" resultMap="blogMap">
        SELECT blog.id, blog.title, blog.content, blog.created_time, blog.user_id, user.name, user.password, user.email
            FROM blog LEFT JOIN user ON blog.user_id = user.id WHERE user.name= #{username}
    </select>

    <insert id="creatBlog" parameterType="club.banyuan.blog.bean.Blog">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT  last_insert_id()
        </selectKey>
        INSERT INTO blog (title,content , user_id) VALUES (#{title},#{content},#{author_id})
    </insert>

    <update id="updateBlog" parameterType="club.banyuan.bean.Blog">
        update blog set title=#{title},content=#{content} where id=#{id}
    </update>
    <!--通过blog id删除blog-->
    <delete id="deleteBlog">
        delete from blog where id=#{blogId}
    </delete>

    <select id="selectAllBlogs" resultMap="selectBlogByUsername">
      select
      blog.id,blog.title,blog.content,blog.created_time,
      author.id as author_id,
      author.name as author_name,
      author.email as author_email
      from blog join
      user as author
      on blog.user_id=author.id
      order by blog.id desc
    </select>

    <select id="selectBlogByKeyword" resultMap="selectBlogByUsername">
      select
      blog.id,blog.title,blog.content,blog.created_time,
      author.id as author_id,
      author.name as author_name,
      author.email as author_email
      from blog join
      user as author
      on blog.user_id=author.id
      where
      blog.id like concat('%',#{keyword},'%')
      or blog.title like concat('%',#{keyword},'%')
      or blog.content like concat('%',#{keyword},'%')
      or blog.created_time like concat('%',#{keyword},'%')
    </select>

</mapper>